// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package query

import (
	"database/sql"
	"database/sql/driver"
	"fmt"

	"github.com/sqlc-dev/pqtype"
)

type FileTypeEnum string

const (
	FileTypeEnumLOCAL     FileTypeEnum = "LOCAL"
	FileTypeEnumSTREAMING FileTypeEnum = "STREAMING"
)

func (e *FileTypeEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = FileTypeEnum(s)
	case string:
		*e = FileTypeEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for FileTypeEnum: %T", src)
	}
	return nil
}

type NullFileTypeEnum struct {
	FileTypeEnum FileTypeEnum
	Valid        bool // Valid is true if FileTypeEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullFileTypeEnum) Scan(value interface{}) error {
	if value == nil {
		ns.FileTypeEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.FileTypeEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullFileTypeEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.FileTypeEnum), nil
}

type FileDownload struct {
	ID        int64
	FilePath  string
	FileType  FileTypeEnum
	Expiry    int32
	ClientKey string
	ServerKey string
	CreatedAt sql.NullTime
}

type ServiceLog struct {
	ID          int64
	ServiceName string
	Metadata    pqtype.NullRawMessage
	CreatedAt   sql.NullTime
}
